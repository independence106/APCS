Algorithm 1:(Binary to Decimal)

/* Given a string with the number in binary that we desire to change into decimal. First we run a for loop in which we input the digits into the array.
   In our next for loop we create a variable which is our desired conversion. In this loop we run through the array and if the digit is a "1" we add 2 to the power
   of the length - the position of item in the array. 
   
   Ex: Our array is ["1", "0", "1"], where our counter e starts at 0. The correct conversion is 5. In our algorithm, our first run would add 2 to the power
   of 2-0(4), the second time, our array would run but input no number "0", finally we would add 2^2-2 (1), giving 5. 

public int binartyToDecimal(String numstring) {
  #creates an array where digits of the number as a string is inputed
  array arrayNum[numstring.length]; #check?
  
  #in this loop we convert the digits in the string and append them into the array
  for (int i; i < numstring.length; i++) {
    #sets the each array position to be the corresponding position in the string
    arrayNum[i] = numstring[i]; 
  }
  
  #define sum as what binary is in decimal
  int sum;
  
  #for loop which will calculate the sum
  for (int e; e <= arrayNum.length; e++) {
    sum += 2
  
  }


}

